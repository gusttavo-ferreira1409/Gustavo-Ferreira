JS 


let snake;
let food;
let gridSize = 30;
let cols, rows;
let speed = 100;

function setup() {
  createCanvas(400, 400);
  cols = floor(width / gridSize);
  rows = floor(height / gridSize);
  snake = new Snake();
  frameRate(speed);
  spawnFood();
}

function draw() {
  background(50);
  frameRate(speed);
  snake.update();
  snake.show();

  if (snake.eat(food)) {
    spawnFood();
    snake.grow();
  }

  fill(255, 0, 0);
  noStroke();
  ellipse(food.x + gridSize / 2, food.y + gridSize / 2, gridSize, gridSize);

  if (snake.endGame()) {
    textSize(32);
    fill(255);
    textAlign(CENTER, CENTER);
    text('Game Over', width / 2, height / 2);
    noLoop();
  }
}

function keyPressed() {
  switch (keyCode) {
    case UP_ARROW:
      if (snake.ydir !== 1) {
        snake.setDirection(0, -1);
      }
      break;
    case DOWN_ARROW:
      if (snake.ydir !== -1) {
        snake.setDirection(0, 1);
      }
      break;
    case LEFT_ARROW:
      if (snake.xdir !== 1) {
        snake.setDirection(-1, 0);
      }
      break;
    case RIGHT_ARROW:
      if (snake.xdir !== -1) {
        snake.setDirection(1, 0);
      }
      break;
  }
}

function spawnFood() {
  let cols = floor(width / gridSize);
  let rows = floor(height / gridSize);
  food = createVector(floor(random(cols)), floor(random(rows)));
  food.mult(gridSize);
}

function Snake() {
  this.body = [];
  this.body[0] = createVector(floor(cols / 2), floor(rows / 2));
  this.xdir = 0;
  this.ydir = 0;
  this.total = 0;

  this.setDirection = function(x, y) {
    this.xdir = x;
    this.ydir = y;
  }

  this.update = function() {
    let head = this.body[this.body.length - 1].copy();
    this.body.shift();
    head.x += this.xdir;
    head.y += this.ydir;
    this.body.push(head);
  }

  this.show = function() {
    for (let i = 0; i < this.body.length; i++) {
      fill(0, 255, 0);
      noStroke();
      rect(this.body[i].x, this.body[i].y, gridSize, gridSize);
    }
  }

  this.eat = function(pos) {
    let x = this.body[this.body.length - 1].x;
    let y = this.body[this.body.length - 1].y;
    if (x === pos.x && y === pos.y) {
      return true;
    }
    return false;
  }

  this.grow = function() {
    let head = this.body[this.body.length - 1].copy();
    this.total++;
    this.body.push(head);
  }

  this.endGame = function() {
    let x = this.body[this.body.length - 1].x;
    let y = this.body[this.body.length - 1].y;
    if (x > width - gridSize || x < 0 || y > height - gridSize || y < 0) {
      return true;
    }
    for (let i = 0; i < this.body.length - 1; i++) {
      let part = this.body[i];
      if (part.x === x && part.y === y) {
        return true;
      }
    }
    return false;
  }
}

